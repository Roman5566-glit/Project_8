import sqlite3

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect("database.db")
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
cursor.execute("""
CREATE TABLE IF NOT EXISTS tasks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    task TEXT NOT NULL,
    done BOOLEAN DEFAULT 0
)
""")
conn.commit()

# –ö–æ–º–∞–Ω–¥—ã
def add_task(task_text):
    cursor.execute("INSERT INTO tasks (task) VALUES (?)", (task_text,))
    conn.commit()
    print("‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")

def list_tasks():
    cursor.execute("SELECT id, task, done FROM tasks")
    tasks = cursor.fetchall()
    if not tasks:
        print("üì≠ –ù–µ—Ç –∑–∞–¥–∞—á.")
    else:
        for tid, text, done in tasks:
            status = "‚úÖ" if done else "‚ùå"
            print(f"[{tid}] {status} {text}")

def mark_done(task_id):
    cursor.execute("UPDATE tasks SET done = 1 WHERE id = ?", (task_id,))
    conn.commit()
    print(f"‚òëÔ∏è –ó–∞–¥–∞—á–∞ {task_id} –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è.")

def delete_task(task_id):
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    print(f"üóëÔ∏è –ó–∞–¥–∞—á–∞ {task_id} —É–¥–∞–ª–µ–Ω–∞.")

# üîÅ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
def interactive_mode():
    print("üìã –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:")
    print("add \"—Ç–µ–∫—Å—Ç\" | list | done <id> | delete <id> | exit")

    while True:
        command = input(">>> ").strip()

        if command.startswith("add "):
            task_text = command[4:].strip().strip('"')
            add_task(task_text)
        elif command == "list":
            list_tasks()
        elif command.startswith("done "):
            try:
                task_id = int(command[5:].strip())
                mark_done(task_id)
            except ValueError:
                print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π ID.")
        elif command.startswith("delete "):
            try:
                task_id = int(command[7:].strip())
                delete_task(task_id)
            except ValueError:
                print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π ID.")
        elif command == "exit":
            print("üëã –í—ã—Ö–æ–¥.")
            break
        else:
            print("‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

# –ó–∞–ø—É—Å–∫
interactive_mode()